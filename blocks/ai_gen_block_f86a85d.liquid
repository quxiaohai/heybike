{% doc %}
  @prompt
    Create a multi-column section with the following features:
    - Section heading text field
    - 3 columns that can be arranged horizontally
    - Each column has separate image uploads for desktop and mobile versions
    - Each column has a small clickable tag/badge
    - Clicking the tag shows a pop-up modal with a description
    - Layout toggle setting to switch between horizontal carousel/slider and vertical stacked list
    - Responsive design that works on all devices
    - Clean, modern styling with smooth animations for the pop-up descriptions, need proper left and right margin. and the badge text need to be on the pic top right (but also need proper margin, not on the top left or top, not close to the pic edge)
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-multi-column-{{ ai_gen_id }} {
    padding: 60px 0;
    background-color: {{ block.settings.background_color }};
  }

  .ai-multi-column-container-{{ ai_gen_id }} {
    max-width: 1600px;
    margin: 0 auto;
    padding: 0 40px;
  }

  .ai-multi-column-heading-{{ ai_gen_id }} {
    text-align: center;
    margin: 0 0 40px;
    font-size: 32px;
    color: {{ block.settings.heading_color }};
  }

  .ai-multi-column-layout-{{ ai_gen_id }} {
    position: relative;
  }

  .ai-multi-column-grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 30px;
  }

  .ai-multi-column-slider-{{ ai_gen_id }} {
    position: relative;
    overflow: hidden;
  }

  .ai-multi-column-slider-track-{{ ai_gen_id }} {
    display: flex;
    gap: 30px;
    transition: transform 0.5s ease;
  }

  .ai-multi-column-slider-{{ ai_gen_id }} .ai-multi-column-item-{{ ai_gen_id }} {
    flex: 0 0 calc(33.333% - 20px);
    min-width: calc(33.333% - 20px);
  }

  .ai-multi-column-item-{{ ai_gen_id }} {
    position: relative;
    background-color: {{ block.settings.card_background }};
    border-radius: {{ block.settings.card_border_radius }}px;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .ai-multi-column-item-{{ ai_gen_id }}:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
  }

  .ai-multi-column-image-wrapper-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    padding-bottom: 100%;
    overflow: hidden;
    background-color: #f4f4f4;
  }

  .ai-multi-column-image-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-multi-column-image-desktop-{{ ai_gen_id }} {
    display: block;
  }

  .ai-multi-column-image-mobile-{{ ai_gen_id }} {
    display: none;
  }

  .ai-multi-column-badge-wrapper-{{ ai_gen_id }} {
    position: absolute;
    top: 16px;
    right: 16px;
    z-index: 2;
  }

  .ai-multi-column-badge-{{ ai_gen_id }} {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    padding: 8px 16px;
    background-color: {{ block.settings.badge_background }};
    color: {{ block.settings.badge_text_color }};
    border-radius: 20px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    border: none;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
  }

  .ai-multi-column-badge-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.badge_hover_background }};
    transform: scale(1.05);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  }

  .ai-multi-column-badge-icon-{{ ai_gen_id }} {
    width: 16px;
    height: 16px;
  }

  .ai-multi-column-modal-overlay-{{ ai_gen_id }} {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.6);
    z-index: 9998;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
  }

  .ai-multi-column-modal-overlay-{{ ai_gen_id }}.active {
    opacity: 1;
    visibility: visible;
  }

  .ai-multi-column-modal-{{ ai_gen_id }} {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0.9);
    background-color: {{ block.settings.modal_background }};
    border-radius: {{ block.settings.modal_border_radius }}px;
    padding: 40px;
    max-width: 600px;
    width: 90%;
    max-height: 80vh;
    overflow-y: auto;
    z-index: 9999;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);
  }

  .ai-multi-column-modal-{{ ai_gen_id }}.active {
    opacity: 1;
    visibility: visible;
    transform: translate(-50%, -50%) scale(1);
  }

  .ai-multi-column-modal-close-{{ ai_gen_id }} {
    position: absolute;
    top: 20px;
    right: 20px;
    background: none;
    border: none;
    cursor: pointer;
    padding: 5px;
    color: {{ block.settings.modal_text_color }};
    opacity: 0.7;
    transition: opacity 0.3s ease;
  }

  .ai-multi-column-modal-close-{{ ai_gen_id }}:hover {
    opacity: 1;
  }

  .ai-multi-column-modal-content-{{ ai_gen_id }} {
    color: {{ block.settings.modal_text_color }};
  }

  .ai-multi-column-modal-content-{{ ai_gen_id }} h3 {
    margin: 0 0 20px;
    font-size: 24px;
  }

  .ai-multi-column-modal-content-{{ ai_gen_id }} p {
    margin: 0;
    line-height: 1.6;
    font-size: 16px;
  }

  .ai-multi-column-slider-nav-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 20px;
    margin-top: 30px;
  }

  .ai-multi-column-slider-button-{{ ai_gen_id }} {
    background-color: {{ block.settings.nav_button_background }};
    color: {{ block.settings.nav_button_color }};
    border: none;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
  }

  .ai-multi-column-slider-button-{{ ai_gen_id }}:hover:not(:disabled) {
    background-color: {{ block.settings.nav_button_hover_background }};
    transform: scale(1.1);
  }

  .ai-multi-column-slider-button-{{ ai_gen_id }}:disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }

  .ai-multi-column-slider-dots-{{ ai_gen_id }} {
    display: flex;
    gap: 8px;
  }

  .ai-multi-column-slider-dot-{{ ai_gen_id }} {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background-color: {{ block.settings.nav_button_background }};
    opacity: 0.3;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .ai-multi-column-slider-dot-{{ ai_gen_id }}.active {
    opacity: 1;
    transform: scale(1.2);
  }

  .ai-multi-column-empty-state-{{ ai_gen_id }} {
    text-align: center;
    padding: 60px 20px;
    color: #666;
    font-style: italic;
  }

  @media screen and (max-width: 989px) {
    .ai-multi-column-container-{{ ai_gen_id }} {
      padding: 0 30px;
    }

    .ai-multi-column-grid-{{ ai_gen_id }} {
      grid-template-columns: repeat(2, 1fr);
      gap: 20px;
    }

    .ai-multi-column-slider-{{ ai_gen_id }} .ai-multi-column-item-{{ ai_gen_id }} {
      flex: 0 0 calc(50% - 15px);
      min-width: calc(50% - 15px);
    }

    .ai-multi-column-heading-{{ ai_gen_id }} {
      font-size: 28px;
    }

    .ai-multi-column-modal-{{ ai_gen_id }} {
      padding: 30px;
    }
  }

  @media screen and (max-width: 749px) {
    .ai-multi-column-container-{{ ai_gen_id }} {
      padding: 0 20px;
    }

    .ai-multi-column-grid-{{ ai_gen_id }} {
      grid-template-columns: 1fr;
    }

    .ai-multi-column-slider-{{ ai_gen_id }} .ai-multi-column-item-{{ ai_gen_id }} {
      flex: 0 0 100%;
      min-width: 100%;
    }

    .ai-multi-column-image-desktop-{{ ai_gen_id }} {
      display: none;
    }

    .ai-multi-column-image-mobile-{{ ai_gen_id }} {
      display: block;
    }

    .ai-multi-column-heading-{{ ai_gen_id }} {
      font-size: 24px;
      margin-bottom: 30px;
    }

    .ai-multi-column-{{ ai_gen_id }} {
      padding: 40px 0;
    }

    .ai-multi-column-modal-{{ ai_gen_id }} {
      padding: 25px;
      width: 95%;
    }

    .ai-multi-column-modal-content-{{ ai_gen_id }} h3 {
      font-size: 20px;
    }

    .ai-multi-column-modal-content-{{ ai_gen_id }} p {
      font-size: 14px;
    }

    .ai-multi-column-badge-wrapper-{{ ai_gen_id }} {
      top: 12px;
      right: 12px;
    }

    .ai-multi-column-badge-{{ ai_gen_id }} {
      padding: 6px 12px;
      font-size: 12px;
    }

    .ai-multi-column-badge-icon-{{ ai_gen_id }} {
      width: 14px;
      height: 14px;
    }
  }
{% endstyle %}

<multi-column-section-{{ ai_gen_id }} class="ai-multi-column-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  <div class="ai-multi-column-container-{{ ai_gen_id }}">
    {% if block.settings.heading != blank %}
      <h2 class="ai-multi-column-heading-{{ ai_gen_id }}">{{ block.settings.heading }}</h2>
    {% endif %}

    {% liquid
      assign has_content = false
      if block.settings.column_1_desktop_image != blank or block.settings.column_2_desktop_image != blank or block.settings.column_3_desktop_image != blank
        assign has_content = true
      endif
    %}

    {% if has_content %}
      <div class="ai-multi-column-layout-{{ ai_gen_id }}" data-layout="{{ block.settings.layout_type }}">
        {% if block.settings.layout_type == 'slider' %}
          <div class="ai-multi-column-slider-{{ ai_gen_id }}">
            <div class="ai-multi-column-slider-track-{{ ai_gen_id }}">
        {% else %}
          <div class="ai-multi-column-grid-{{ ai_gen_id }}">
        {% endif %}

          {% for i in (1..3) %}
            {% liquid
              assign desktop_image_key = 'column_' | append: i | append: '_desktop_image'
              assign mobile_image_key = 'column_' | append: i | append: '_mobile_image'
              assign badge_text_key = 'column_' | append: i | append: '_badge_text'
              assign description_key = 'column_' | append: i | append: '_description'

              assign desktop_image = block.settings[desktop_image_key]
              assign mobile_image = block.settings[mobile_image_key]
              assign badge_text = block.settings[badge_text_key]
              assign description = block.settings[description_key]
            %}

            {% if desktop_image != blank %}
              <div class="ai-multi-column-item-{{ ai_gen_id }}" data-column="{{ i }}">
                <div class="ai-multi-column-image-wrapper-{{ ai_gen_id }}">
                  {% if desktop_image %}
                    <img
                      src="{{ desktop_image | image_url: width: 800 }}"
                      alt="{{ desktop_image.alt | escape }}"
                      loading="lazy"
                      width="800"
                      height="800"
                      class="ai-multi-column-image-{{ ai_gen_id }} ai-multi-column-image-desktop-{{ ai_gen_id }}"
                    >
                  {% endif %}

                  {% if mobile_image %}
                    <img
                      src="{{ mobile_image | image_url: width: 800 }}"
                      alt="{{ mobile_image.alt | escape }}"
                      loading="lazy"
                      width="800"
                      height="800"
                      class="ai-multi-column-image-{{ ai_gen_id }} ai-multi-column-image-mobile-{{ ai_gen_id }}"
                    >
                  {% elsif desktop_image %}
                    <img
                      src="{{ desktop_image | image_url: width: 800 }}"
                      alt="{{ desktop_image.alt | escape }}"
                      loading="lazy"
                      width="800"
                      height="800"
                      class="ai-multi-column-image-{{ ai_gen_id }} ai-multi-column-image-mobile-{{ ai_gen_id }}"
                    >
                  {% endif %}

                  {% if badge_text != blank %}
                    <div class="ai-multi-column-badge-wrapper-{{ ai_gen_id }}">
                      <button
                        class="ai-multi-column-badge-{{ ai_gen_id }}"
                        data-modal-trigger="{{ i }}"
                        aria-label="View details for {{ badge_text }}"
                      >
                        <svg class="ai-multi-column-badge-icon-{{ ai_gen_id }}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                          <circle cx="12" cy="12" r="10"></circle>
                          <line x1="12" y1="16" x2="12" y2="12"></line>
                          <line x1="12" y1="8" x2="12.01" y2="8"></line>
                        </svg>
                        {{ badge_text }}
                      </button>
                    </div>
                  {% endif %}
                </div>
              </div>
            {% endif %}
          {% endfor %}

        {% if block.settings.layout_type == 'slider' %}
            </div>
          </div>
          <div class="ai-multi-column-slider-nav-{{ ai_gen_id }}">
            <button class="ai-multi-column-slider-button-{{ ai_gen_id }}" data-slider-prev aria-label="Previous slide">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <polyline points="15 18 9 12 15 6"></polyline>
              </svg>
            </button>
            <div class="ai-multi-column-slider-dots-{{ ai_gen_id }}"></div>
            <button class="ai-multi-column-slider-button-{{ ai_gen_id }}" data-slider-next aria-label="Next slide">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <polyline points="9 18 15 12 9 6"></polyline>
              </svg>
            </button>
          </div>
        {% else %}
          </div>
        {% endif %}
      </div>
    {% else %}
      <div class="ai-multi-column-empty-state-{{ ai_gen_id }}">
        Add images to your columns to get started
      </div>
    {% endif %}
  </div>

  <div class="ai-multi-column-modal-overlay-{{ ai_gen_id }}" data-modal-overlay></div>

  {% for i in (1..3) %}
    {% liquid
      assign badge_text_key = 'column_' | append: i | append: '_badge_text'
      assign description_key = 'column_' | append: i | append: '_description'
      assign badge_text = block.settings[badge_text_key]
      assign description = block.settings[description_key]
    %}

    {% if badge_text != blank or description != blank %}
      <div class="ai-multi-column-modal-{{ ai_gen_id }}" data-modal="{{ i }}">
        <button class="ai-multi-column-modal-close-{{ ai_gen_id }}" data-modal-close aria-label="Close modal">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
          </svg>
        </button>
        <div class="ai-multi-column-modal-content-{{ ai_gen_id }}">
          {% if badge_text != blank %}
            <h3>{{ badge_text }}</h3>
          {% endif %}
          {% if description != blank %}
            <p>{{ description }}</p>
          {% endif %}
        </div>
      </div>
    {% endif %}
  {% endfor %}
</multi-column-section-{{ ai_gen_id }}>

<script>
  (function() {
    class MultiColumnSection{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentSlide = 0;
        this.totalSlides = 0;
      }

      connectedCallback() {
        this.layout = this.querySelector('.ai-multi-column-layout-{{ ai_gen_id }}');
        this.layoutType = this.layout ? this.layout.dataset.layout : 'grid';
        this.modalOverlay = this.querySelector('[data-modal-overlay]');
        this.modals = this.querySelectorAll('[data-modal]');
        this.modalTriggers = this.querySelectorAll('[data-modal-trigger]');
        this.modalCloseButtons = this.querySelectorAll('[data-modal-close]');

        this.setupModals();

        if (this.layoutType === 'slider') {
          this.setupSlider();
        }
      }

      setupModals() {
        this.modalTriggers.forEach((trigger) => {
          trigger.addEventListener('click', () => {
            const modalId = trigger.dataset.modalTrigger;
            this.openModal(modalId);
          });
        });

        this.modalCloseButtons.forEach((button) => {
          button.addEventListener('click', () => {
            this.closeAllModals();
          });
        });

        this.modalOverlay.addEventListener('click', () => {
          this.closeAllModals();
        });

        document.addEventListener('keydown', (e) => {
          if (e.key === 'Escape') {
            this.closeAllModals();
          }
        });
      }

      openModal(modalId) {
        const modal = this.querySelector(`[data-modal="${modalId}"]`);
        if (modal) {
          this.modalOverlay.classList.add('active');
          modal.classList.add('active');
          document.body.style.overflow = 'hidden';
        }
      }

      closeAllModals() {
        this.modalOverlay.classList.remove('active');
        this.modals.forEach((modal) => {
          modal.classList.remove('active');
        });
        document.body.style.overflow = '';
      }

      setupSlider() {
        this.slider = this.querySelector('.ai-multi-column-slider-{{ ai_gen_id }}');
        this.sliderTrack = this.querySelector('.ai-multi-column-slider-track-{{ ai_gen_id }}');
        this.slides = this.querySelectorAll('.ai-multi-column-item-{{ ai_gen_id }}');
        this.prevButton = this.querySelector('[data-slider-prev]');
        this.nextButton = this.querySelector('[data-slider-next]');
        this.dotsContainer = this.querySelector('.ai-multi-column-slider-dots-{{ ai_gen_id }}');

        if (!this.slider || !this.sliderTrack || this.slides.length === 0) return;

        this.totalSlides = this.slides.length;
        this.createDots();
        this.updateSlider();

        this.prevButton.addEventListener('click', () => this.prevSlide());
        this.nextButton.addEventListener('click', () => this.nextSlide());

        let startX = 0;
        let currentX = 0;
        let isDragging = false;

        this.slider.addEventListener('touchstart', (e) => {
          startX = e.touches[0].clientX;
          isDragging = true;
        });

        this.slider.addEventListener('touchmove', (e) => {
          if (!isDragging) return;
          currentX = e.touches[0].clientX;
        });

        this.slider.addEventListener('touchend', () => {
          if (!isDragging) return;
          const diff = startX - currentX;
          if (Math.abs(diff) > 50) {
            if (diff > 0) {
              this.nextSlide();
            } else {
              this.prevSlide();
            }
          }
          isDragging = false;
        });
      }

      createDots() {
        if (!this.dotsContainer) return;
        this.dotsContainer.innerHTML = '';
        for (let i = 0; i < this.totalSlides; i++) {
          const dot = document.createElement('button');
          dot.classList.add('ai-multi-column-slider-dot-{{ ai_gen_id }}');
          dot.setAttribute('aria-label', `Go to slide ${i + 1}`);
          dot.addEventListener('click', () => this.goToSlide(i));
          this.dotsContainer.appendChild(dot);
        }
      }

      updateSlider() {
        if (!this.sliderTrack) return;

        const slideWidth = this.slides[0].offsetWidth;
        const gap = 30;
        const offset = this.currentSlide * (slideWidth + gap);
        this.sliderTrack.style.transform = `translateX(-${offset}px)`;

        this.prevButton.disabled = this.currentSlide === 0;
        this.nextButton.disabled = this.currentSlide >= this.totalSlides - 1;

        const dots = this.dotsContainer.querySelectorAll('.ai-multi-column-slider-dot-{{ ai_gen_id }}');
        dots.forEach((dot, index) => {
          if (index === this.currentSlide) {
            dot.classList.add('active');
          } else {
            dot.classList.remove('active');
          }
        });
      }

      prevSlide() {
        if (this.currentSlide > 0) {
          this.currentSlide--;
          this.updateSlider();
        }
      }

      nextSlide() {
        if (this.currentSlide < this.totalSlides - 1) {
          this.currentSlide++;
          this.updateSlider();
        }
      }

      goToSlide(index) {
        this.currentSlide = index;
        this.updateSlider();
      }
    }

    customElements.define('multi-column-section-{{ ai_gen_id }}', MultiColumnSection{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Multi-column section",
  "settings": [
    {
      "type": "header",
      "content": "Section"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Featured Collection"
    },
    {
      "type": "select",
      "id": "layout_type",
      "label": "Layout type",
      "options": [
        {
          "value": "grid",
          "label": "Grid"
        },
        {
          "value": "slider",
          "label": "Slider"
        }
      ],
      "default": "grid"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#171717"
    },
    {
      "type": "header",
      "content": "Column 1"
    },
    {
      "type": "image_picker",
      "id": "column_1_desktop_image",
      "label": "Desktop image"
    },
    {
      "type": "image_picker",
      "id": "column_1_mobile_image",
      "label": "Mobile image"
    },
    {
      "type": "text",
      "id": "column_1_badge_text",
      "label": "Badge text",
      "default": "Learn More"
    },
    {
      "type": "textarea",
      "id": "column_1_description",
      "label": "Description",
      "default": "Add your detailed description here. This will appear in the modal when users click the badge."
    },
    {
      "type": "header",
      "content": "Column 2"
    },
    {
      "type": "image_picker",
      "id": "column_2_desktop_image",
      "label": "Desktop image"
    },
    {
      "type": "image_picker",
      "id": "column_2_mobile_image",
      "label": "Mobile image"
    },
    {
      "type": "text",
      "id": "column_2_badge_text",
      "label": "Badge text",
      "default": "Discover"
    },
    {
      "type": "textarea",
      "id": "column_2_description",
      "label": "Description",
      "default": "Add your detailed description here. This will appear in the modal when users click the badge."
    },
    {
      "type": "header",
      "content": "Column 3"
    },
    {
      "type": "image_picker",
      "id": "column_3_desktop_image",
      "label": "Desktop image"
    },
    {
      "type": "image_picker",
      "id": "column_3_mobile_image",
      "label": "Mobile image"
    },
    {
      "type": "text",
      "id": "column_3_badge_text",
      "label": "Badge text",
      "default": "Explore"
    },
    {
      "type": "textarea",
      "id": "column_3_description",
      "label": "Description",
      "default": "Add your detailed description here. This will appear in the modal when users click the badge."
    },
    {
      "type": "header",
      "content": "Card style"
    },
    {
      "type": "color",
      "id": "card_background",
      "label": "Card background",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "card_border_radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Card border radius",
      "default": 12
    },
    {
      "type": "header",
      "content": "Badge style"
    },
    {
      "type": "color",
      "id": "badge_background",
      "label": "Badge background",
      "default": "#171717"
    },
    {
      "type": "color",
      "id": "badge_hover_background",
      "label": "Badge hover background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "badge_text_color",
      "label": "Badge text color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Modal style"
    },
    {
      "type": "color",
      "id": "modal_background",
      "label": "Modal background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "modal_text_color",
      "label": "Modal text color",
      "default": "#171717"
    },
    {
      "type": "range",
      "id": "modal_border_radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Modal border radius",
      "default": 16
    },
    {
      "type": "header",
      "content": "Slider navigation"
    },
    {
      "type": "color",
      "id": "nav_button_background",
      "label": "Button background",
      "default": "#171717"
    },
    {
      "type": "color",
      "id": "nav_button_hover_background",
      "label": "Button hover background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "nav_button_color",
      "label": "Button icon color",
      "default": "#ffffff"
    }
  ],
  "presets": [
    {
      "name": "Multi-column section"
    }
  ]
}
{% endschema %}