{%- comment -%}
  Renders a color swatch

  Accepts:
  - allow_multiple: {Boolean} If set to true, it allows several values to be selected (by using a checkbox instead of radio)
  - id: {String}
  - value: {String} The color value
  - name: the name attribute when field is submitted
  - title: {String} The color title
  - selected: {Boolean} If set to true, this swatch is preselected
  - size: {String} Can be 'sm' to make it smaller
  - show_tooltip: {Boolean} If set to true, display a tooltip on hover
  - file_extension: {String}

  Usage:
  {% render 'swatch' %}
{%- endcomment -%}

{%- liquid
  assign file_extension = file_extension | default: 'png'
  assign file_name = value | handle | append: '.' | append: file_extension
  assign swatch_fallback = value | split: ' ' | last | handle

  assign value_downcase = value | downcase
  assign swatch_config = settings.swatch_config | newline_to_br | split: '<br />'
  for swatch in swatch_config
    assign swatch_parts = swatch | strip | split: ':'
    assign swatch_name = swatch_parts.first | downcase | strip

    if swatch_name == value_downcase
      assign swatch_value = swatch_parts.last | strip
      if swatch_value contains '#'
        assign swatch_fallback = swatch_value
      else
        assign file_name = swatch_value
      endif
      break
    endif
  endfor

  assign swatch_image = blank
  if images[file_name] != blank
    assign swatch_image = images[file_name] | image_url: width: 72
  elsif file_name contains '//cdn.shopify.com/'
    assign swatch_image = file_name
  endif
-%}
<style>
  :root { 
    --swatch-background: {{ swatch_fallback }}; 
  }
</style>
{%- if href -%}
  <a href="javascript:void(0);" data-swatchname="{{ value | escape }}" data-variantid="{{ variant.id }}" data-image="{{ variant.featured_image | img_url: 'master' | replace : '//www.','https:' }}" class="{% if index == 1 %}active{% endif %} color-swatch block relative{% if class != blank %} {{ class }}{% endif %}" title="{{ title | escape }}" aria-label="{{ title | escape }}" style="--swatch-background: {{ swatch_fallback }};{% if file_name != blank %} background-image: url({{ file_name }});{% endif %}">
    <style>
      .product-card .swatches .color-swatch.active[data-swatchname="{{ value | escape }}"] { 
        {% if value contains "white" or value contains "White" or value contains "WHITE" %}
          outline-color: var(--color-black); 
        {% endif %}
      }
    </style>
    {%- if show_tooltip -%}
      <span class="tooltip opacity-0 pointer-events-none text-sm rounded-full z-10">{{ value | escape }}</span>
    {%- else -%}
      <span class="sr-only">{{ value | escape }}</span>
    {%- endif -%}
  </a>
 
{%- else -%}  
  <input class="sr-only" name="{{ name }}" value="{{ value | escape }}" type="{% if allow_multiple %}checkbox{% else %}radio{% endif %}"{% if form %} form="{{ form | escape }}"{% endif %} id="{{ id | escape }}"{% if disabled %} disabled{% endif %}{% if selected %} checked{% endif %} />
  <label class="color-swatch block relative{% if class != blank %} {{ class }}{% endif %}" for="{{ id | escape }}" style="--swatch-background: {{ swatch_fallback }};{% if swatch_image != blank %} background-image: url({{ swatch_image }});{% endif %}">
    {%- if show_tooltip -%}
      <span class="tooltip opacity-0 pointer-events-none text-sm rounded-full z-10">{{ value | escape }}</span>
    {%- else -%}
      <span class="sr-only">{{ value | escape }}</span>
    {%- endif -%}
  </label>
{%- endif -%}

{% comment %}
  <script>
    var colorSwatches = document.querySelectorAll('.color-swatch');
    
    colorSwatches.forEach(function(swatch) {
      swatch.addEventListener('click', function() {
          var imageUrl = this.getAttribute('data-image');
          console.log("imageUrl",imageUrl)
          var variantId = this.getAttribute('data-variantid');
          var swatchName = this.getAttribute('data-swatchname');
          var productCard = this.closest('.product-card');
        
          var swatchElement = productCard.querySelectorAll('.swatches li a');
          swatchElement.forEach(function(item) {
            item.classList.remove('active')
          });
          this.classList.add('active')
          var anchorTag = productCard.querySelector('a');
          productCard.querySelector('.quick-add button').setAttribute('data-swatchcolorname',swatchName)
          productCard.querySelector('quick-view').setAttribute('data-swatchcolorname',swatchName)
          var originalHref = anchorTag.getAttribute('href');
          var newURL;
          if (originalHref.includes('?variant=')) {
              newURL = originalHref.replace(/(variant=)[^\&]+/, '$1' + variantId);
          } else {
              newURL = originalHref + (originalHref.includes('?') ? '&' : '?') + 'variant=' + variantId;
          }

          anchorTag.setAttribute('href', newURL);
          var MainimgElement = productCard.querySelector('.product-card__media img');
          if (imageUrl) {
              var allImages = productCard.querySelectorAll('.variant-images img');
              productCard.querySelector('.variant-images').style.display = 'block';
              productCard.querySelector('.product-card__media img').style.display = 'none';
              let findImage = false
              allImages.forEach(function(imgElement) {
                  var imgSrc = imgElement.getAttribute('data-image'); 
                  if (imgSrc === imageUrl && !findImage) { 
                      imgElement.style.display = 'block'; 
                      findImage = true;
                  } else {
                      imgElement.style.display = 'none';
                  }
              });
          }
      });
  });
  </script>
{% endcomment %}