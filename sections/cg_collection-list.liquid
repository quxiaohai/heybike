{% comment %}
  Adjusted by CLEARgo
{% endcomment %}

{% style %}
  #shopify-section-{{ section.id }} {
    --section-padding-top: {{ section.settings.padding_top }}px;
    --section-padding-bottom: {{ section.settings.padding_bottom }}px;
    {%- render 'section-variables', section: section -%}
  }

  .section-{{ section.id }} .media-card--overlap .media-card__content {
    transition: all .3s; 
    
    {% if section.settings.content_border_radius != blank %}
      border-radius: {{ section.settings.content_border_radius }}px; 
    {% endif %}
    {% if section.settings.show_backdrop_filter == true %}
      width: calc(100% - (36vw / 19.2)); 
      margin: calc(20vw / 19.2) calc(20vw / 19.2); 
      padding: calc(28vw / 19.2) calc(20vw / 19.2); 
      backdrop-filter: blur(4px); 
    {% endif %}
    {% if section.settings.show_darker == true %}
      background-color: rgba(0, 0, 0, 0.7); 
    {% endif %}
  }

  .section-{{ section.id }} .media-card--overlap .media-card__content * { 
    font-weight: 700; 
  }

  .section-{{ section.id }} .media-card--overlap .media-card__content {
    transition: all .3s; 
  }

  .section-{{ section.id }} .media-card--overlap:hover .media-card__content {
    background-color: var(--color-lemon-yellow); 
  }

  .section-{{ section.id }} .media-card--overlap:hover .media-card__content * { 
    color: var(--color-black); 
  }

  .section-{{ section.id }} .media-card__text .heading { 
    {% if section.settings.content_font_size != blank %}
      font-size: calc({{ section.settings.content_font_size }}vw / 19.2); 
    {% endif %}
  }
  
  .section-{{ section.id }} .media-card--overlap .media-card__content .arrow-wrapper { 
    transition: all .3s; 
  }
  
  .section-{{ section.id }} .media-card--overlap:hover .media-card__content .arrow-wrapper { 
    border: 1px solid var(--color-black); 
  }

  .section-{{ section.id }} .media-card--overlap:hover .media-card__content svg { 
    filter: invert(1); 
  }

  /* Responsive */
  /* Mobile */
  @media (max-width: 767px) { 
    .section-{{ section.id }} .media-card--overlap .media-card__content { 
      width: calc(100% - 16px); 
      margin: 8px; 
      padding: 16px 12px; 
    }

    .section-{{ section.id }} .media-card__text .heading { 
      {% if section.settings.content_font_size != blank %}
        font-size: 16px; 
      {% endif %}
    }
  }

  /* Tablet */
  @media (min-width: 768px) and (max-width: 1366px) { 
    .section-{{ section.id }} .media-card--overlap .media-card__content { 
      width: calc(100% - (36vw / 13.66)); 
      margin: calc(20vw / 13.66) calc(20vw / 13.66); 
      padding: calc(28vw / 13.66) calc(20vw / 13.66); 
    }

    .section-{{ section.id }} .media-card__text .heading { 
      {% if section.settings.content_font_size != blank %}
        font-size: calc({{ section.settings.content_font_size }} / 13.66); 
      {% endif %}
    }
  }

  /* Desktop */
  @media (min-width: 1920px) { 
    .section-{{ section.id }} .media-card--overlap .media-card__content { 
      width: calc(100% - 36px); 
      margin: 20px 18px; 
      padding: 28px 20px; 
    }

    .section-{{ section.id }} .media-card__text .heading { 
      {% if section.settings.content_font_size != blank %}
        font-size: {{ section.settings.content_font_size }}px; 
      {% endif %}
    }
  }
{% endstyle %}

<div class="section-{{ section.id }} section section--padding{% if section.settings.divider %} section--divider{% endif %}{% if section.settings.rounded %} section--rounded relative{% endif %}">
  <div class="page-width{% if section.settings.full_width %} page-width--full{% endif %} relative">
    {%- capture view_all -%}
      {%- if section.settings.show_view_all and section.blocks.size < collections.size -%}
        <a class="button button--secondary icon-with-text" href="{{ routes.collections_url }}" is="hover-link">
          <span class="btn-fill" data-fill></span>
          <span class="btn-text">
            {%- liquid
              render 'icon', icon: 'newspaper'
              echo 'sections.collection_list.view_all' | t
            -%}
          </span>
        </a>
      {%- endif -%}
    {%- endcapture -%}
    {%- capture indicators -%}
      {%- if section.settings.carousel_on_desktop -%}
        <div class="indicators hidden lg:flex gap-2d5">
          <button class="button button--secondary" type="button" is="previous-button" aria-controls="Slider-{{ section.id }}" aria-label="{{ 'general.pagination.previous' | t | escape }}" disabled>
            <span class="btn-fill" data-fill></span>
            <span class="btn-text">
              {%- render 'icon', icon: 'chevron-left', class: 'transform' -%}
            </span>
          </button>
          <button class="button button--secondary" type="button" is="next-button" aria-controls="Slider-{{ section.id }}" aria-label="{{ 'general.pagination.next' | t | escape }}">
            <span class="btn-fill" data-fill></span>
            <span class="btn-text">
              {%- render 'icon', icon: 'chevron-right', class: 'transform' -%}
            </span>
          </button>
        </div>
        <p class="lg:hidden">{{ view_all }}</p>
      {%- else -%}
        <p>{{ view_all }}</p>
      {%- endif -%}
    {%- endcapture -%}
    {%- render 'section-heading', section: section, section_button: indicators -%}

    <slider-element id="Slider-{{ section.id }}" class="grid slider{% if section.settings.carousel_on_desktop %} slider--desktop{% endif %}{% if section.settings.swipe_on_mobile %} slider--tablet{% endif %}" selector=".card-grid>.card">
      <motion-list class="card-grid card-grid--{{ section.settings.columns }} mobile:card-grid--{{ section.settings.columns_mobile }} grid">
        {%- for block in section.blocks -%}
          {%- assign collection = collections[block.settings.collection] -%}
          {%- render 'cg_collection-card',
            block: block,
            collection: collection,
            image_type: section.settings.image_type,
            image_ratio: section.settings.image_ratio,
            show_products_count: section.settings.show_products_count,
            position: forloop.index,
          -%}
        {%- endfor -%}
      </motion-list>

      {%- if section.settings.heading == blank and section.settings.subheading == blank and section.settings.description == blank -%}
        {%- if section.settings.carousel_on_desktop -%}
          <div class="indicators hidden lg:flex gap-2d5 items-center absolute top-0 left-0 w-full h-full pointer-events-none opacity-0 page-width">
            <button class="button button--primary pointer-events-auto" type="button" is="previous-button" aria-controls="Slider-{{ section.id }}" aria-label="{{ 'general.pagination.previous' | t | escape }}" disabled tabindex="-1">
              <span class="btn-fill" data-fill></span>
              <span class="btn-text">
                {%- render 'icon', icon: 'chevron-left', class: 'stroke-2 transform' -%}
              </span>
            </button>
            <button class="button button--primary pointer-events-auto" type="button" is="next-button" aria-controls="Slider-{{ section.id }}" aria-label="{{ 'general.pagination.next' | t | escape }}" tabindex="-1">
              <span class="btn-fill" data-fill></span>
              <span class="btn-text">
                {%- render 'icon', icon: 'chevron-right', class: 'stroke-2 transform' -%}
              </span>
            </button>
          </div>
        {%- endif -%}
      {%- endif -%}
    </slider-element>

    {%- if section.settings.carousel_on_desktop -%}
      <p class="hidden lg:block">{{ view_all }}</p>
    {%- endif -%}
  </div>
</div>

{% schema %}
{
  "name": "CG Collection list",
  "settings": [
    {
      "type": "range",
      "id": "columns",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 4,
      "label": "t:sections.global.settings.columns.label"
    },
    {
      "type": "checkbox",
      "id": "carousel_on_desktop",
      "label": "t:sections.global.settings.carousel_on_desktop.label",
      "default": true
    },
    {
      "type": "select",
      "id": "image_type",
      "options": [
        {
          "value": "product",
          "label": "t:sections.main-list-collections.settings.image_type.options__1.label"
        },
        {
          "value": "collection",
          "label": "t:sections.main-list-collections.settings.image_type.options__2.label"
        }
      ],
      "default": "collection",
      "label": "t:sections.main-list-collections.settings.image_type.label"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.global.settings.image_ratio.options__1.label"
        },
        {
          "value": "square",
          "label": "t:sections.global.settings.image_ratio.options__2.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.global.settings.image_ratio.options__3.label"
        },
        {
          "value": "landscape",
          "label": "t:sections.global.settings.image_ratio.options__4.label"
        },
        {
          "value": "wide",
          "label": "t:sections.global.settings.image_ratio.options__5.label"
        }
      ],
      "default": "square",
      "label": "t:sections.global.settings.image_ratio.label",
      "info": "t:sections.main-list-collections.settings.image_ratio.info"
    },
    {
      "type": "checkbox",
      "id": "show_products_count",
      "default": true,
      "label": "t:sections.main-list-collections.settings.show_products_count.label"
    },
    {
      "type": "checkbox",
      "id": "show_view_all",
      "default": false,
      "label": "t:sections.collection-list.settings.show_view_all.label",
      "info": "t:sections.collection-list.settings.show_view_all.info"
    },
    {
      "type": "header",
      "content": "t:sections.global.settings.header__mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "options": [
        {
          "value": "1",
          "label": "t:sections.global.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.global.settings.columns_mobile.options__2.label"
        }
      ],
      "default": "1",
      "label": "t:sections.global.settings.columns_mobile.label"
    },
    {
      "type": "checkbox",
      "id": "swipe_on_mobile",
      "label": "t:sections.global.settings.swipe_on_mobile.label",
      "default": true
    },
    {
      "type": "header",
      "content": "t:sections.global.settings.header__heading.content"
    },
    {
      "type": "inline_richtext",
      "id": "heading",
      "label": "t:sections.global.settings.heading.label",
      "default": "Collections"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "title-sm",
          "label": "t:sections.global.settings.heading_size.options__1.label"
        },
        {
          "value": "title-md",
          "label": "t:sections.global.settings.heading_size.options__2.label"
        },
        {
          "value": "title-lg tracking-heading",
          "label": "t:sections.global.settings.heading_size.options__3.label"
        },
        {
          "value": "title-xl tracking-heading",
          "label": "t:sections.global.settings.heading_size.options__4.label"
        }
      ],
      "default": "title-md",
      "label": "t:sections.global.settings.heading_size.label"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "t:sections.global.settings.heading_alignment.label",
      "options": [
        {
          "value": "text-left md:items-end md:flex-row",
          "label": "t:sections.global.settings.heading_alignment.options__1.label"
        },
        {
          "value": "text-center md:items-center",
          "label": "t:sections.global.settings.heading_alignment.options__2.label"
        },
        {
          "value": "text-right md:items-end md:flex-row-reverse",
          "label": "t:sections.global.settings.heading_alignment.options__3.label"
        }
      ],
      "default": "text-left md:items-end md:flex-row"
    },
    {
      "type": "select",
      "id": "heading_tag",
      "options": [
        {
          "value": "h1",
          "label": "t:sections.global.settings.heading_tag.options__1.label"
        },
        {
          "value": "h2",
          "label": "t:sections.global.settings.heading_tag.options__2.label"
        },
        {
          "value": "h3",
          "label": "t:sections.global.settings.heading_tag.options__3.label"
        },
        {
          "value": "h4",
          "label": "t:sections.global.settings.heading_tag.options__4.label"
        },
        {
          "value": "h5",
          "label": "t:sections.global.settings.heading_tag.options__5.label"
        },
        {
          "value": "h6",
          "label": "t:sections.global.settings.heading_tag.options__6.label"
        },
        {
          "value": "div",
          "label": "t:sections.global.settings.heading_tag.options__7.label"
        },
        {
          "value": "span",
          "label": "t:sections.global.settings.heading_tag.options__8.label"
        },
        {
          "value": "p",
          "label": "t:sections.global.settings.heading_tag.options__9.label"
        }
      ],
      "default": "h2",
      "label": "t:sections.global.settings.heading_tag.label",
      "info": "t:sections.global.settings.heading_tag.info"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "t:sections.global.settings.subheading.label"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "t:sections.global.settings.description.label"
    },
    {
      "type": "header",
      "content": "t:sections.global.settings.header__highlight.content",
      "info": "t:sections.global.settings.header__highlight.info"
    },
    {
      "type": "select",
      "id": "highlighted_text",
      "options": [
        {
          "value": "none",
          "label": "t:sections.global.settings.highlighted_text.options__1.label"
        },
        {
          "value": "text",
          "label": "t:sections.global.settings.highlighted_text.options__2.label"
        },
        {
          "value": "full_text",
          "label": "t:sections.global.settings.highlighted_text.options__3.label"
        },
        {
          "value": "half_text",
          "label": "t:sections.global.settings.highlighted_text.options__4.label"
        },
        {
          "value": "underline",
          "label": "t:sections.global.settings.highlighted_text.options__5.label"
        },
        {
          "value": "stencil",
          "label": "t:sections.global.settings.highlighted_text.options__6.label"
        },
        {
          "value": "scribble",
          "label": "t:sections.global.settings.highlighted_text.options__7.label"
        }
      ],
      "default": "none",
      "label": "t:sections.global.settings.highlighted_text.label"
    },
    {
      "type": "select",
      "id": "highlighted_scribble",
      "options": [
        {
          "value": "circle",
          "label": "t:sections.global.settings.highlighted_scribble.options__1.label"
        },
        {
          "value": "basic-underline",
          "label": "t:sections.global.settings.highlighted_scribble.options__2.label"
        },
        {
          "value": "sketch-underline",
          "label": "t:sections.global.settings.highlighted_scribble.options__3.label"
        },
        {
          "value": "squiggle-underline",
          "label": "t:sections.global.settings.highlighted_scribble.options__4.label"
        },
        {
          "value": "squiggle-underline-2",
          "label": "t:sections.global.settings.highlighted_scribble.options__5.label"
        }
      ],
      "default": "circle",
      "label": "t:sections.global.settings.highlighted_scribble.label",
      "info": "t:sections.global.settings.highlighted_scribble.info"
    },
    {
      "type": "header",
      "content": "t:sections.global.settings.header__colors.content",
      "info": "t:sections.global.settings.header__colors.info"
    },
    {
      "type": "color",
      "id": "color_text",
      "label": "t:sections.global.settings.color_text.label"
    },
    {
      "type": "color",
      "id": "color_background",
      "label": "t:sections.global.settings.color_background.label"
    },
    {
      "type": "color_background",
      "id": "gradient_background",
      "label": "t:sections.global.settings.gradient_background.label"
    },
    {
      "type": "color",
      "id": "color_highlight",
      "label": "t:sections.global.settings.color_highlight.label"
    },
    {
      "type": "color_background",
      "id": "gradient_highlight",
      "label": "t:sections.global.settings.gradient_highlight.label"
    },
    {
      "type": "color",
      "id": "color_button_text",
      "label": "t:sections.global.settings.color_button_text.label"
    },
    {
      "type": "color",
      "id": "color_button_background",
      "label": "t:sections.global.settings.color_button_background.label"
    },
    {
      "type": "color_background",
      "id": "color_button_gradient",
      "label": "t:sections.global.settings.color_button_gradient.label"
    },
    {
      "type": "header",
      "content": "t:sections.global.settings.header__section.content"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "label": "t:sections.global.settings.padding_top.label",
      "default": 72
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 120,
      "step": 4,
      "unit": "px",
      "label": "t:sections.global.settings.padding_bottom.label",
      "default": 72
    },
    {
      "type": "checkbox",
      "id": "divider",
      "label": "t:sections.global.settings.divider.label",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "t:sections.global.settings.full_width.label",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "rounded",
      "default": false,
      "label": "t:sections.global.settings.rounded.label"
    }, 
    {
      "type": "header", 
      "content": "Content box"
    }, 
    { 
      "type": "range", 
      "id": "content_border_radius", 
      "label": "border radius", 
      "min": 0, 
      "max": 72, 
      "step": 1, 
      "unit": "px", 
      "default": 10
    }, 
    {
      "type": "range", 
      "id": "content_font_size", 
      "label": "Font size", 
      "min": 0, 
      "max": 72,
      "step": 1, 
      "unit": "px",  
      "default": 28
    }, 
    {
      "type": "checkbox", 
      "id": "show_backdrop_filter", 
      "label": "Show backdrop filter", 
      "default": true
    }, 
    {
      "type": "checkbox", 
      "id": "show_darker", 
      "label": "Show darker", 
      "default": true
    }
  ],
  "blocks": [
    {
      "type": "collection",
      "name": "t:sections.global.blocks.collection.name",
      "settings": [
        {
          "label": "t:sections.global.settings.collection.label",
          "id": "collection",
          "type": "collection"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "t:sections.global.settings.image.label"
        },
        {
          "type": "text",
          "id": "title",
          "label": "t:sections.global.settings.title.label"
        },
        {
          "type": "inline_richtext",
          "id": "description",
          "label": "t:sections.global.settings.description.label"
        },
        {
          "type": "checkbox",
          "id": "overlay_content",
          "default": false,
          "label": "t:sections.main-list-collections.settings.overlay_content.label"
        },
        {
          "type": "header",
          "content": "t:sections.global.settings.header__colors.content"
        },
        {
          "type": "color",
          "id": "color_text",
          "label": "t:sections.global.settings.color_text.label",
          "default": "#ffffff"
        },
        {
          "type": "color",
          "id": "color_overlay",
          "label": "t:sections.global.settings.color_overlay.label",
          "default": "#000000"
        },
        {
          "type": "range",
          "id": "overlay_opacity",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "%",
          "label": "t:sections.global.settings.overlay_opacity.label",
          "default": 30
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "CG Collection list",
      "blocks": [
        {
          "type": "collection"
        },
        {
          "type": "collection"
        },
        {
          "type": "collection"
        }
      ]
    }
  ],
  "disabled_on": {
    "templates": [
      "password"
    ]
  }
}
{% endschema %}
